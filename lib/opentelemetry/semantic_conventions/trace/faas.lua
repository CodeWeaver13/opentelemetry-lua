--- This file was automatically generated by utils/generate_semantic_conventions.lua
-- See: https://github.com/open-telemetry/opentelemetry-specification/tree/main/specification/trace/semantic_conventions
--
-- module @semantic_conventions.trace.faas
local _M = {
    -- Type of the trigger which caused this function execution.
    FAAS_TRIGGER = "faas.trigger",
    -- The execution ID of the current function execution.
    FAAS_EXECUTION = "faas.execution",
    -- The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.
    FAAS_DOCUMENT_COLLECTION = "faas.document.collection",
    -- Describes the type of the operation that was performed on the data.
    FAAS_DOCUMENT_OPERATION = "faas.document.operation",
    -- A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
    FAAS_DOCUMENT_TIME = "faas.document.time",
    -- The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.
    FAAS_DOCUMENT_NAME = "faas.document.name",
    -- A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
    FAAS_TIME = "faas.time",
    -- A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).
    FAAS_CRON = "faas.cron",
    -- A boolean that is true if the serverless function is executed for the first time (aka cold-start).
    FAAS_COLDSTART = "faas.coldstart",
    -- The name of the invoked function.
    FAAS_INVOKED_NAME = "faas.invoked_name",
    -- The cloud provider of the invoked function.
    FAAS_INVOKED_PROVIDER = "faas.invoked_provider",
    -- The cloud region of the invoked function.
    FAAS_INVOKED_REGION = "faas.invoked_region"
}
return _M
